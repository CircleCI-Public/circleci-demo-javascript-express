defaults: &defaults
  working_directory: ~/mern-starter
  docker:
    - image: node:8.3
    - image: mongo:3.4.7

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: make test results folder
          command: mkdir test_results
      - persist_to_workspace:
          root: /root
          paths:
            - mern-starter
            
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /root

      - run:
          command: |
            ls -al
            ls -al /root/mern-starter
      - run:
          name: test
          command: npm test
      - run:
          name: code-coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: test_results
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test_results

  create_docker:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /root
      - setup_remote_docker
      - run:
          name: install docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build and Push Docker Image
          command: |
            docker build -t levlaz/circleci-demo-js-express .
            docker tag levlaz/circleci-demo-js-express:$CIRCLE_SHA1 levlaz/circleci-demo-js-express:stable
            docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
            docker push levlaz/circleci-demo-js-express

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: deploy to AWS
          command: |
            ./script/deploy.sh



workflows:
  version: 2

  btd:
    jobs:
      - build
      - test:
          requires:
            - build
      - create_docker:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - create_docker
          filters:
            branches:
              only:
                - master
